/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Amount;
import io.swagger.client.model.Notification;


/**
 * BalanceChangeNotification
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class BalanceChangeNotification extends Notification  {
  @SerializedName("accountId")
  private Long accountId = null;

  @SerializedName("lowerThreshold")
  private Amount lowerThreshold = null;

  @SerializedName("upperThreshold")
  private Amount upperThreshold = null;

  public BalanceChangeNotification accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Identifier of the account to which this notification belongs.
   * @return accountId
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identifier of the account to which this notification belongs.")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public BalanceChangeNotification lowerThreshold(Amount lowerThreshold) {
    this.lowerThreshold = lowerThreshold;
    return this;
  }

   /**
   * Optional limitation; lower threshold of the amount (negative values allowed) above which notifications will be sent
   * @return lowerThreshold
  **/
  @ApiModelProperty(example = "null", value = "Optional limitation; lower threshold of the amount (negative values allowed) above which notifications will be sent")
  public Amount getLowerThreshold() {
    return lowerThreshold;
  }

  public void setLowerThreshold(Amount lowerThreshold) {
    this.lowerThreshold = lowerThreshold;
  }

  public BalanceChangeNotification upperThreshold(Amount upperThreshold) {
    this.upperThreshold = upperThreshold;
    return this;
  }

   /**
   * Optional limitation; upper threshold of the amount (negative values allowed) below which notifications will be sent
   * @return upperThreshold
  **/
  @ApiModelProperty(example = "null", value = "Optional limitation; upper threshold of the amount (negative values allowed) below which notifications will be sent")
  public Amount getUpperThreshold() {
    return upperThreshold;
  }

  public void setUpperThreshold(Amount upperThreshold) {
    this.upperThreshold = upperThreshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceChangeNotification balanceChangeNotification = (BalanceChangeNotification) o;
    return Objects.equals(this.accountId, balanceChangeNotification.accountId) &&
        Objects.equals(this.lowerThreshold, balanceChangeNotification.lowerThreshold) &&
        Objects.equals(this.upperThreshold, balanceChangeNotification.upperThreshold) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, lowerThreshold, upperThreshold, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceChangeNotification {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    lowerThreshold: ").append(toIndentedString(lowerThreshold)).append("\n");
    sb.append("    upperThreshold: ").append(toIndentedString(upperThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

