/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Account
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class Account   {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("userDefinedName")
  private String userDefinedName = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("providerId")
  private Long providerId = null;

  /**
   * An account kind is a classification of its structure and its possibilities.   This is typically defined by the bank provider.
   */
  public enum KindEnum {
    @SerializedName("GIRO")
    GIRO("GIRO"),
    
    @SerializedName("SPAR")
    SPAR("SPAR"),
    
    @SerializedName("FESTGELD")
    FESTGELD("FESTGELD"),
    
    @SerializedName("DEPOT")
    DEPOT("DEPOT"),
    
    @SerializedName("DARLEHEN")
    DARLEHEN("DARLEHEN"),
    
    @SerializedName("KREDITKARTE")
    KREDITKARTE("KREDITKARTE"),
    
    @SerializedName("BAUSPAR")
    BAUSPAR("BAUSPAR"),
    
    @SerializedName("VL_SPAR")
    VL_SPAR("VL_SPAR"),
    
    @SerializedName("VL_BAUSPAR")
    VL_BAUSPAR("VL_BAUSPAR"),
    
    @SerializedName("VL_WERTPAPIERSPARVERTRAG")
    VL_WERTPAPIERSPARVERTRAG("VL_WERTPAPIERSPARVERTRAG");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("kind")
  private KindEnum kind = null;

  @SerializedName("automaticRefresh")
  private Boolean automaticRefresh = null;

  @SerializedName("type")
  private String type = null;

  public Account id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID of this account (generated value)
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "Internal ID of this account (generated value)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Account name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Account name returned by bank provider (e.g., \"Giro Account\")
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "Account name returned by bank provider (e.g., \"Giro Account\")")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Account userDefinedName(String userDefinedName) {
    this.userDefinedName = userDefinedName;
    return this;
  }

   /**
   * Account userDefinedName. This value can be set to define a custom name used in AHOI (e.g., \"My Giro Account\").  Can be changed by using the account resource.
   * @return userDefinedName
  **/
  @ApiModelProperty(example = "null", value = "Account userDefinedName. This value can be set to define a custom name used in AHOI (e.g., \"My Giro Account\").  Can be changed by using the account resource.")
  public String getUserDefinedName() {
    return userDefinedName;
  }

  public void setUserDefinedName(String userDefinedName) {
    this.userDefinedName = userDefinedName;
  }

  public Account owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Account owner returned by bank provider (e.g., \"Max Mustermann\")
   * @return owner
  **/
  @ApiModelProperty(example = "null", required = true, value = "Account owner returned by bank provider (e.g., \"Max Mustermann\")")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public Account providerId(Long providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * Identifier of the provider to which this account belongs
   * @return providerId
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identifier of the provider to which this account belongs")
  public Long getProviderId() {
    return providerId;
  }

  public void setProviderId(Long providerId) {
    this.providerId = providerId;
  }

  public Account kind(KindEnum kind) {
    this.kind = kind;
    return this;
  }

   /**
   * An account kind is a classification of its structure and its possibilities.   This is typically defined by the bank provider.
   * @return kind
  **/
  @ApiModelProperty(example = "null", required = true, value = "An account kind is a classification of its structure and its possibilities.   This is typically defined by the bank provider.")
  public KindEnum getKind() {
    return kind;
  }

  public void setKind(KindEnum kind) {
    this.kind = kind;
  }

  public Account automaticRefresh(Boolean automaticRefresh) {
    this.automaticRefresh = automaticRefresh;
    return this;
  }

   /**
   * Flag to determine whether this account is automatically refreshed on the server side.   Requires that the corresponding access has its PIN saved.  Can be updated by using the account resource.   Default is `false`.
   * @return automaticRefresh
  **/
  @ApiModelProperty(example = "null", required = true, value = "Flag to determine whether this account is automatically refreshed on the server side.   Requires that the corresponding access has its PIN saved.  Can be updated by using the account resource.   Default is `false`.")
  public Boolean getAutomaticRefresh() {
    return automaticRefresh;
  }

  public void setAutomaticRefresh(Boolean automaticRefresh) {
    this.automaticRefresh = automaticRefresh;
  }

  public Account type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Discriminator for subtypes. At the moment only `BankAccount` is supported.
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "Discriminator for subtypes. At the moment only `BankAccount` is supported.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.id, account.id) &&
        Objects.equals(this.name, account.name) &&
        Objects.equals(this.userDefinedName, account.userDefinedName) &&
        Objects.equals(this.owner, account.owner) &&
        Objects.equals(this.providerId, account.providerId) &&
        Objects.equals(this.kind, account.kind) &&
        Objects.equals(this.automaticRefresh, account.automaticRefresh) &&
        Objects.equals(this.type, account.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, userDefinedName, owner, providerId, kind, automaticRefresh, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userDefinedName: ").append(toIndentedString(userDefinedName)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    automaticRefresh: ").append(toIndentedString(automaticRefresh)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

