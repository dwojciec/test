/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * NotificationTarget
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class NotificationTarget   {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("appToken")
  private String appToken = null;

  @SerializedName("productId")
  private String productId = null;

  /**
   * Operating system of the application
   */
  public enum OperatingSystemEnum {
    @SerializedName("IOS")
    IOS("IOS"),
    
    @SerializedName("ANDROID")
    ANDROID("ANDROID");

    private String value;

    OperatingSystemEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("operatingSystem")
  private OperatingSystemEnum operatingSystem = null;

  /**
   * State of the application
   */
  public enum StateEnum {
    @SerializedName("OK")
    OK("OK"),
    
    @SerializedName("UNDEFINED")
    UNDEFINED("UNDEFINED"),
    
    @SerializedName("TARGET_UNKNOWN")
    TARGET_UNKNOWN("TARGET_UNKNOWN"),
    
    @SerializedName("INVALID_TOKEN_FORMAT")
    INVALID_TOKEN_FORMAT("INVALID_TOKEN_FORMAT");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("locale")
  private String locale = null;

  public NotificationTarget id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID of this notificationTarget (generated value)
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Internal ID of this notificationTarget (generated value)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public NotificationTarget appToken(String appToken) {
    this.appToken = appToken;
    return this;
  }

   /**
   * Installation of specific application token to which to send push notifications. (e.g., device token on iOS devices)
   * @return appToken
  **/
  @ApiModelProperty(example = "null", required = true, value = "Installation of specific application token to which to send push notifications. (e.g., device token on iOS devices)")
  public String getAppToken() {
    return appToken;
  }

  public void setAppToken(String appToken) {
    this.appToken = appToken;
  }

  public NotificationTarget productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * ID of the application. Has to be set up in AHOI. Use \"sandbox-product\" in sandbox environment.
   * @return productId
  **/
  @ApiModelProperty(example = "null", required = true, value = "ID of the application. Has to be set up in AHOI. Use \"sandbox-product\" in sandbox environment.")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public NotificationTarget operatingSystem(OperatingSystemEnum operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * Operating system of the application
   * @return operatingSystem
  **/
  @ApiModelProperty(example = "null", required = true, value = "Operating system of the application")
  public OperatingSystemEnum getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(OperatingSystemEnum operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public NotificationTarget state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * State of the application
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "State of the application")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public NotificationTarget locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Locale used to determine notification titles and texts for this target.   Defaults to 'de_DE'.
   * @return locale
  **/
  @ApiModelProperty(example = "null", required = true, value = "Locale used to determine notification titles and texts for this target.   Defaults to 'de_DE'.")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationTarget notificationTarget = (NotificationTarget) o;
    return Objects.equals(this.id, notificationTarget.id) &&
        Objects.equals(this.appToken, notificationTarget.appToken) &&
        Objects.equals(this.productId, notificationTarget.productId) &&
        Objects.equals(this.operatingSystem, notificationTarget.operatingSystem) &&
        Objects.equals(this.state, notificationTarget.state) &&
        Objects.equals(this.locale, notificationTarget.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, appToken, productId, operatingSystem, state, locale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationTarget {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    appToken: ").append(toIndentedString(appToken)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

