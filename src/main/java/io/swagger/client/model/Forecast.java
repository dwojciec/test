/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Balance;
import io.swagger.client.model.TransactionPattern;
import java.util.ArrayList;
import java.util.List;


/**
 * Forecast
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class Forecast   {
  @SerializedName("forecastBalance")
  private Balance forecastBalance = null;

  @SerializedName("accountId")
  private Long accountId = null;

  @SerializedName("unappliedTransactionPatterns")
  private List<TransactionPattern> unappliedTransactionPatterns = new ArrayList<TransactionPattern>();

  public Forecast forecastBalance(Balance forecastBalance) {
    this.forecastBalance = forecastBalance;
    return this;
  }

   /**
   * Balance forecast
   * @return forecastBalance
  **/
  @ApiModelProperty(example = "null", required = true, value = "Balance forecast")
  public Balance getForecastBalance() {
    return forecastBalance;
  }

  public void setForecastBalance(Balance forecastBalance) {
    this.forecastBalance = forecastBalance;
  }

  public Forecast accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * ID of account to which this entry belongs
   * @return accountId
  **/
  @ApiModelProperty(example = "null", required = true, value = "ID of account to which this entry belongs")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public Forecast unappliedTransactionPatterns(List<TransactionPattern> unappliedTransactionPatterns) {
    this.unappliedTransactionPatterns = unappliedTransactionPatterns;
    return this;
  }

  public Forecast addUnappliedTransactionPatternsItem(TransactionPattern unappliedTransactionPatternsItem) {
    this.unappliedTransactionPatterns.add(unappliedTransactionPatternsItem);
    return this;
  }

   /**
   * List of unapplied transaction patterns
   * @return unappliedTransactionPatterns
  **/
  @ApiModelProperty(example = "null", required = true, value = "List of unapplied transaction patterns")
  public List<TransactionPattern> getUnappliedTransactionPatterns() {
    return unappliedTransactionPatterns;
  }

  public void setUnappliedTransactionPatterns(List<TransactionPattern> unappliedTransactionPatterns) {
    this.unappliedTransactionPatterns = unappliedTransactionPatterns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Forecast forecast = (Forecast) o;
    return Objects.equals(this.forecastBalance, forecast.forecastBalance) &&
        Objects.equals(this.accountId, forecast.accountId) &&
        Objects.equals(this.unappliedTransactionPatterns, forecast.unappliedTransactionPatterns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forecastBalance, accountId, unappliedTransactionPatterns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Forecast {\n");
    
    sb.append("    forecastBalance: ").append(toIndentedString(forecastBalance)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    unappliedTransactionPatterns: ").append(toIndentedString(unappliedTransactionPatterns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

