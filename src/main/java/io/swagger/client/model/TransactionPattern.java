/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Amount;


/**
 * TransactionPattern
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class TransactionPattern   {
  @SerializedName("id")
  private Long id = null;

  /**
   * State of this pattern  can be `ACTIVE` (default) or `INACTIVE` (user has disabled it)
   */
  public enum StateEnum {
    @SerializedName("INACTIVE")
    INACTIVE("INACTIVE"),
    
    @SerializedName("ACTIVE")
    ACTIVE("ACTIVE");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  /**
   * Frequency of occurrence for this pattern
   */
  public enum CycleEnum {
    @SerializedName("MONTHLY")
    MONTHLY("MONTHLY"),
    
    @SerializedName("QUARTERLY")
    QUARTERLY("QUARTERLY"),
    
    @SerializedName("SEMI_ANNUALLY")
    SEMI_ANNUALLY("SEMI_ANNUALLY"),
    
    @SerializedName("ANNUALLY")
    ANNUALLY("ANNUALLY");

    private String value;

    CycleEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("cycle")
  private CycleEnum cycle = null;

  /**
   * Origin of creation can be `FINDER` (automatically found) or `MANUAL` (created by user). Cannot be set with creation or update.
   */
  public enum OriginEnum {
    @SerializedName("FINDER")
    FINDER("FINDER"),
    
    @SerializedName("MANUAL")
    MANUAL("MANUAL");

    private String value;

    OriginEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("origin")
  private OriginEnum origin = null;

  @SerializedName("day")
  private Integer day = null;

  @SerializedName("relatedAccountOwner")
  private String relatedAccountOwner = null;

  @SerializedName("amount")
  private Amount amount = null;

  @SerializedName("accountNumber")
  private String accountNumber = null;

  @SerializedName("bankCode")
  private String bankCode = null;

  @SerializedName("kind")
  private String kind = null;

  public TransactionPattern id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID of this transactionPattern (generated value)
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Internal ID of this transactionPattern (generated value)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TransactionPattern state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * State of this pattern  can be `ACTIVE` (default) or `INACTIVE` (user has disabled it)
   * @return state
  **/
  @ApiModelProperty(example = "null", required = true, value = "State of this pattern  can be `ACTIVE` (default) or `INACTIVE` (user has disabled it)")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public TransactionPattern cycle(CycleEnum cycle) {
    this.cycle = cycle;
    return this;
  }

   /**
   * Frequency of occurrence for this pattern
   * @return cycle
  **/
  @ApiModelProperty(example = "null", required = true, value = "Frequency of occurrence for this pattern")
  public CycleEnum getCycle() {
    return cycle;
  }

  public void setCycle(CycleEnum cycle) {
    this.cycle = cycle;
  }

  public TransactionPattern origin(OriginEnum origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Origin of creation can be `FINDER` (automatically found) or `MANUAL` (created by user). Cannot be set with creation or update.
   * @return origin
  **/
  @ApiModelProperty(example = "null", value = "Origin of creation can be `FINDER` (automatically found) or `MANUAL` (created by user). Cannot be set with creation or update.")
  public OriginEnum getOrigin() {
    return origin;
  }

  public void setOrigin(OriginEnum origin) {
    this.origin = origin;
  }

  public TransactionPattern day(Integer day) {
    this.day = day;
    return this;
  }

   /**
   * Day in the cycle this pattern occurs
   * @return day
  **/
  @ApiModelProperty(example = "null", required = true, value = "Day in the cycle this pattern occurs")
  public Integer getDay() {
    return day;
  }

  public void setDay(Integer day) {
    this.day = day;
  }

  public TransactionPattern relatedAccountOwner(String relatedAccountOwner) {
    this.relatedAccountOwner = relatedAccountOwner;
    return this;
  }

   /**
   * Name of owner of related account (debtor or creditor)
   * @return relatedAccountOwner
  **/
  @ApiModelProperty(example = "null", required = true, value = "Name of owner of related account (debtor or creditor)")
  public String getRelatedAccountOwner() {
    return relatedAccountOwner;
  }

  public void setRelatedAccountOwner(String relatedAccountOwner) {
    this.relatedAccountOwner = relatedAccountOwner;
  }

  public TransactionPattern amount(Amount amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount value
   * @return amount
  **/
  @ApiModelProperty(example = "null", required = true, value = "Amount value")
  public Amount getAmount() {
    return amount;
  }

  public void setAmount(Amount amount) {
    this.amount = amount;
  }

  public TransactionPattern accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account number or IBAN of related account (debtor or creditor)
   * @return accountNumber
  **/
  @ApiModelProperty(example = "null", required = true, value = "Account number or IBAN of related account (debtor or creditor)")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public TransactionPattern bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

   /**
   * Bank code number or BIC of related account (debtor or creditor)
   * @return bankCode
  **/
  @ApiModelProperty(example = "null", required = true, value = "Bank code number or BIC of related account (debtor or creditor)")
  public String getBankCode() {
    return bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public TransactionPattern kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind of transaction (e.g., \"Lastschrift\" or \"Dauerauftrag\")
   * @return kind
  **/
  @ApiModelProperty(example = "null", value = "Kind of transaction (e.g., \"Lastschrift\" or \"Dauerauftrag\")")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionPattern transactionPattern = (TransactionPattern) o;
    return Objects.equals(this.id, transactionPattern.id) &&
        Objects.equals(this.state, transactionPattern.state) &&
        Objects.equals(this.cycle, transactionPattern.cycle) &&
        Objects.equals(this.origin, transactionPattern.origin) &&
        Objects.equals(this.day, transactionPattern.day) &&
        Objects.equals(this.relatedAccountOwner, transactionPattern.relatedAccountOwner) &&
        Objects.equals(this.amount, transactionPattern.amount) &&
        Objects.equals(this.accountNumber, transactionPattern.accountNumber) &&
        Objects.equals(this.bankCode, transactionPattern.bankCode) &&
        Objects.equals(this.kind, transactionPattern.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, cycle, origin, day, relatedAccountOwner, amount, accountNumber, bankCode, kind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionPattern {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    relatedAccountOwner: ").append(toIndentedString(relatedAccountOwner)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

