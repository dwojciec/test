/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * InputFieldDescription
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class InputFieldDescription   {
  /**
   * Internal ID for this field description
   */
  public enum IdEnum {
    @SerializedName("USERNAME")
    USERNAME("USERNAME"),
    
    @SerializedName("CUSTOMERNUMBER")
    CUSTOMERNUMBER("CUSTOMERNUMBER"),
    
    @SerializedName("PIN")
    PIN("PIN"),
    
    @SerializedName("TAN")
    TAN("TAN");

    private String value;

    IdEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("id")
  private IdEnum id = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("masked")
  private Boolean masked = null;

  /**
   * Format of field value  Can be `DEFINITELYNUMERIC` (format is definitely numeric), `DEFINITELYALPHANUMERIC` (format is definitely alphanumeric),  `PROBABLYALPHANUMERIC` (format is probably alphanumeric; numeric is unlikely but possible), `PROBABLYNUMERIC` (format is probably  numeric; alphanumeric is unlikely but possible) or `UNSPECIFIED` (default, no hint available)
   */
  public enum FormatEnum {
    @SerializedName("UNSPECIFIED")
    UNSPECIFIED("UNSPECIFIED"),
    
    @SerializedName("PROBABLYNUMERIC")
    PROBABLYNUMERIC("PROBABLYNUMERIC"),
    
    @SerializedName("DEFINITELYNUMERIC")
    DEFINITELYNUMERIC("DEFINITELYNUMERIC"),
    
    @SerializedName("PROBABLYALPHANUMERIC")
    PROBABLYALPHANUMERIC("PROBABLYALPHANUMERIC"),
    
    @SerializedName("DEFINITELYALPHANUMERIC")
    DEFINITELYALPHANUMERIC("DEFINITELYALPHANUMERIC");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("format")
  private FormatEnum format = null;

  @SerializedName("lengthMin")
  private Integer lengthMin = null;

  @SerializedName("lengthMax")
  private Integer lengthMax = null;

  public InputFieldDescription id(IdEnum id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID for this field description
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "Internal ID for this field description")
  public IdEnum getId() {
    return id;
  }

  public void setId(IdEnum id) {
    this.id = id;
  }

  public InputFieldDescription label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label for this field description (e.g., 'PIN', 'Login name', 'Customer No.')
   * @return label
  **/
  @ApiModelProperty(example = "null", required = true, value = "Label for this field description (e.g., 'PIN', 'Login name', 'Customer No.')")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public InputFieldDescription masked(Boolean masked) {
    this.masked = masked;
    return this;
  }

   /**
   * Flag that indicates whether the given field value must be masked when entered on client side or encrypted when persisted  on the server side
   * @return masked
  **/
  @ApiModelProperty(example = "null", required = true, value = "Flag that indicates whether the given field value must be masked when entered on client side or encrypted when persisted  on the server side")
  public Boolean getMasked() {
    return masked;
  }

  public void setMasked(Boolean masked) {
    this.masked = masked;
  }

  public InputFieldDescription format(FormatEnum format) {
    this.format = format;
    return this;
  }

   /**
   * Format of field value  Can be `DEFINITELYNUMERIC` (format is definitely numeric), `DEFINITELYALPHANUMERIC` (format is definitely alphanumeric),  `PROBABLYALPHANUMERIC` (format is probably alphanumeric; numeric is unlikely but possible), `PROBABLYNUMERIC` (format is probably  numeric; alphanumeric is unlikely but possible) or `UNSPECIFIED` (default, no hint available)
   * @return format
  **/
  @ApiModelProperty(example = "null", required = true, value = "Format of field value  Can be `DEFINITELYNUMERIC` (format is definitely numeric), `DEFINITELYALPHANUMERIC` (format is definitely alphanumeric),  `PROBABLYALPHANUMERIC` (format is probably alphanumeric; numeric is unlikely but possible), `PROBABLYNUMERIC` (format is probably  numeric; alphanumeric is unlikely but possible) or `UNSPECIFIED` (default, no hint available)")
  public FormatEnum getFormat() {
    return format;
  }

  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  public InputFieldDescription lengthMin(Integer lengthMin) {
    this.lengthMin = lengthMin;
    return this;
  }

   /**
   * Minimum length of field value (0 = no limit)
   * @return lengthMin
  **/
  @ApiModelProperty(example = "null", value = "Minimum length of field value (0 = no limit)")
  public Integer getLengthMin() {
    return lengthMin;
  }

  public void setLengthMin(Integer lengthMin) {
    this.lengthMin = lengthMin;
  }

  public InputFieldDescription lengthMax(Integer lengthMax) {
    this.lengthMax = lengthMax;
    return this;
  }

   /**
   * Maximum length of field value (0 = no limit)
   * @return lengthMax
  **/
  @ApiModelProperty(example = "null", value = "Maximum length of field value (0 = no limit)")
  public Integer getLengthMax() {
    return lengthMax;
  }

  public void setLengthMax(Integer lengthMax) {
    this.lengthMax = lengthMax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputFieldDescription inputFieldDescription = (InputFieldDescription) o;
    return Objects.equals(this.id, inputFieldDescription.id) &&
        Objects.equals(this.label, inputFieldDescription.label) &&
        Objects.equals(this.masked, inputFieldDescription.masked) &&
        Objects.equals(this.format, inputFieldDescription.format) &&
        Objects.equals(this.lengthMin, inputFieldDescription.lengthMin) &&
        Objects.equals(this.lengthMax, inputFieldDescription.lengthMax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, masked, format, lengthMin, lengthMax);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputFieldDescription {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    masked: ").append(toIndentedString(masked)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    lengthMin: ").append(toIndentedString(lengthMin)).append("\n");
    sb.append("    lengthMax: ").append(toIndentedString(lengthMax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

