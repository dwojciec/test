/**
 * AHOI API
 * AHOI (working title) is our managed and flexible banking API designed to offer easy access to your users bank accounts.  [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Imprint](https://symbioticon.de/legal-notices/)  [Privacy Disclaimer](https://symbioticon.de/data-protection-guidelines/)  &copy; 2016 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InputFieldDescription;
import io.swagger.client.model.ResponseObjectMap;
import java.util.ArrayList;
import java.util.List;


/**
 * TransferChallenge
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T09:10:08.564Z")
public class TransferChallenge   {
  @SerializedName("transferTaskId")
  private Long transferTaskId = null;

  @SerializedName("fieldDescriptions")
  private List<InputFieldDescription> fieldDescriptions = new ArrayList<InputFieldDescription>();

  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("responseObjects")
  private ResponseObjectMap responseObjects = null;

  public TransferChallenge transferTaskId(Long transferTaskId) {
    this.transferTaskId = transferTaskId;
    return this;
  }

   /**
   * TranferTaskID - The referenced task for that payment &mdash; challenge
   * @return transferTaskId
  **/
  @ApiModelProperty(example = "null", value = "TranferTaskID - The referenced task for that payment &mdash; challenge")
  public Long getTransferTaskId() {
    return transferTaskId;
  }

  public void setTransferTaskId(Long transferTaskId) {
    this.transferTaskId = transferTaskId;
  }

  public TransferChallenge fieldDescriptions(List<InputFieldDescription> fieldDescriptions) {
    this.fieldDescriptions = fieldDescriptions;
    return this;
  }

  public TransferChallenge addFieldDescriptionsItem(InputFieldDescription fieldDescriptionsItem) {
    this.fieldDescriptions.add(fieldDescriptionsItem);
    return this;
  }

   /**
   * Information to describe and facilitate validation of an transfer.
   * @return fieldDescriptions
  **/
  @ApiModelProperty(example = "null", value = "Information to describe and facilitate validation of an transfer.")
  public List<InputFieldDescription> getFieldDescriptions() {
    return fieldDescriptions;
  }

  public void setFieldDescriptions(List<InputFieldDescription> fieldDescriptions) {
    this.fieldDescriptions = fieldDescriptions;
  }

  public TransferChallenge challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Challenge &mdash; challenge text
   * @return challenge
  **/
  @ApiModelProperty(example = "null", required = true, value = "Challenge &mdash; challenge text")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public TransferChallenge responseObjects(ResponseObjectMap responseObjects) {
    this.responseObjects = responseObjects;
    return this;
  }

   /**
   * FieldSet &mdash; The required InputFields for that challenge
   * @return responseObjects
  **/
  @ApiModelProperty(example = "null", required = true, value = "FieldSet &mdash; The required InputFields for that challenge")
  public ResponseObjectMap getResponseObjects() {
    return responseObjects;
  }

  public void setResponseObjects(ResponseObjectMap responseObjects) {
    this.responseObjects = responseObjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferChallenge transferChallenge = (TransferChallenge) o;
    return Objects.equals(this.transferTaskId, transferChallenge.transferTaskId) &&
        Objects.equals(this.fieldDescriptions, transferChallenge.fieldDescriptions) &&
        Objects.equals(this.challenge, transferChallenge.challenge) &&
        Objects.equals(this.responseObjects, transferChallenge.responseObjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferTaskId, fieldDescriptions, challenge, responseObjects);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferChallenge {\n");
    
    sb.append("    transferTaskId: ").append(toIndentedString(transferTaskId)).append("\n");
    sb.append("    fieldDescriptions: ").append(toIndentedString(fieldDescriptions)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    responseObjects: ").append(toIndentedString(responseObjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

